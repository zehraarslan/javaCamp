package kodlama.io.application.dataAccess.concretes;

import java.util.ArrayList;
import java.util.List;

import kodlama.io.application.dataAccess.abstracts.InternRepository;
import kodlama.io.application.dataAccess.abstracts.ProjectLanguageRepository;
import kodlama.io.application.entities.concretes.Intern;
import kodlama.io.application.entities.concretes.ProjectLanguage;

public class InMemoryRepository implements InternRepository, ProjectLanguageRepository{
	
	private List<Intern> interns = new ArrayList<Intern>();
	private List<ProjectLanguage> projectLanguages = new ArrayList<ProjectLanguage>();
	
	public InMemoryRepository(List<Intern> interns, List<ProjectLanguage> projectLanguages) {
		this.interns = interns;
		this.projectLanguages = projectLanguages;
	}
	
	
	@Override
	public void add(ProjectLanguage projectLanguage) {
		System.out.println("Proje dili sisteme eklendi : " + projectLanguage.getLanguageName());
		projectLanguages.add(projectLanguage);
	}
	@Override
	public void delete(ProjectLanguage projectLanguage) {
		System.out.println("Proje dili sistemden silindi : " + projectLanguage.getLanguageName());
		projectLanguages.remove(projectLanguage);
	}
	
	public void updateLanguage(ProjectLanguage oldProjectLanguage, ProjectLanguage projectLanguage) {
		System.out.println("Proje dili sisteme eklendi : " + projectLanguage.getLanguageName());
		projectLanguages.remove(oldProjectLanguage);
		projectLanguages.add(projectLanguage);
	}
	@Override
	public List<ProjectLanguage> getLanguageAll() {
		return projectLanguages;
	}
	@Override
	public ProjectLanguage getLanguageId(int id) {
		for (ProjectLanguage language : projectLanguages) {
			if(language.getLanguageId() == id) {
				return language;
			}
		}
		return null;
	}
	@Override
	public void add(Intern intern) {
		System.out.println("Intern sisteme eklendi : " + intern.getFirstName() + " " +intern.getLastName() + " " + intern.getProjectName() + " " + intern.getLanguageId());
		interns.add(intern);
	}
	@Override
	public void delete(Intern intern) {
		System.out.println("Intern sistemden silindi : " + intern.getFirstName() + " " +intern.getLastName() + " " + intern.getProjectName() + " " + intern.getLanguageId());
		interns.remove(intern);
	}
	@Override
	public void update(Intern oldIntern,Intern intern) {
		System.out.println("Intern sisteme eklendi : " + intern.getFirstName() + " " +intern.getLastName() + " " + intern.getProjectName() + " " + intern.getLanguageId());
		interns.remove(oldIntern);
		interns.add(intern);
	}

	
	
}
